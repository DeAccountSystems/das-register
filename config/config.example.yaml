server:
  is_update: false # stop send tx or system update
  net: 1 # 1 mainnet 2 testnet
  http_server_addr: ":8120"
  http_server_internal_addr: ":8119"
  pay_server_address: "" # for send register tx
  pay_private: ""
  # Use das-database instead if running with docker compose.
  parser_url: "http://127.0.0.1:8118/v1" # das-database server
  tx_tool_switch: true # open send register tx
  recover_ckb: 1000
  recover_time: 1 # min
  split_ckb: 2000
origins: # cross domain
  - ""
pay_address_map: # receiver's address
  "ckb": ""
  "eth": ""
  "tron": ""
  "bsc": ""
  "polygon": ""
  "doge": ""
chain:
  # Use host.docker.internal instead if running with docker compose.
  ckb_url: "http://127.0.0.1:8114"
  index_url: "http://127.0.0.1:8116"
  current_block_number: 0 # 0-start from the latest block number, 4872287-start from  the earliest block number
  confirm_num: 4
  concurrency_num: 100
db:
  mysql:
    # Use mysql instead if running with docker compose.
    addr: "127.0.0.1:3306" # 172.17.0.1: docker 182.17.0.1: docker-compose
    user: "root"
    password: "123456"
    db_name: "das_register"
    max_open_conn: 100
    max_idle_conn: 50
  parser_mysql:
    # Use mysql instead if running with docker compose.
    addr: "127.0.0.1:3306" # 172.17.0.1: docker 182.17.0.1: docker-compose
    user: "root"
    password: "123456"
    db_name: "das_database"
    max_open_conn: 100
    max_idle_conn: 50
cache:
  redis:
    # Use redis instead if running with docker compose.
    addr: "127.0.0.1:6379" # 172.17.0.1: docker 182.17.0.1: docker-compose
    password: ""
    db_num: 0
das:
  account_min_length: 4
  account_max_length: 42
  open_account_min_length: 4
  open_account_max_length: 9
  max_register_years: 20
  premium: "0.1"
  discount: "0"
